{"version":3,"sources":["components/img/money-loader.gif","components/img/coins.png","components/utils/AxiosFuncs.js","components/records/AddForm.js","components/records/EditForm.js","components/records/DeleteForm.js","components/records/Records.js","components/home/Home.js","components/stats/SimpleLineChart.js","components/stats/CategoryPieChart.js","components/stats/Stats.js","App.js","serviceWorker.js","components/store/dataStore.js","index.js"],"names":["module","exports","__webpack_require__","p","AxiosFuncs","addCategory","_this","postRequests","name","type","Icon","addRecord","newRecord","userid","deleteRecord","id","deleteRequests","deleteCategory","editCategories","putRequests","editRecord","userId","link","axios","get","concat","catch","error","console","log","delete","then","result","data","put","headers","Content-Type","response","post","AddForm","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","amount","setState","isRed","categoryid","categoriesExpense","filter","d","category","categoriesIncome","paymentmethodid","paymentMethod","_this$state","date","currency","comment","props","closeAddForm","getRecords","err","inputChange","e","_this$setState2","target","_this$setState","value","defineProperty","currencies","getCategories","_this2","getCategoriesFromDB","Date","moment","format","alert","react_default","a","createElement","className","index_es","onClick","icon","onChange","checked","map","cat","i","key","c","Component","EditForm","recordIdToEdit","closeEditForm","inputChangeType","record","records","r","paymentMethodId","DeleteForm","recordIdToDelete","res","closeDeleteForm","Records","getDataFromDB","allRecords","total","length","sort","b","isLoading","changeInput","event","changePage","action","currentPage","getCurrentRecords","showLoader","alt","src","loader","showSearchBar","startDate","endDate","placeholder","textTosearch","showTotal","showItemsPerPage","itemsPerPage","itemsPerPageOptions","m","showPagination","startIndex","endIndex","lastPage","size","showHeader","fields","f","showAddForm","parseInt","toConsumableArray","toLowerCase","includes","Math","ceil","slice","renderRecords","currencyIcon","NIS","EUR","USD","changeSelected","_this$getCurrentRecor","records_AddForm","records_EditForm","records_DeleteForm","Home","coins","height","width","SimpleLineChart","showDateFilter","months","today","_this$getDatesSelect","getDatesSelect","startMonth","startYear","currentMonth","currentYear","year","month","push","getDateFromMonth","table","generateMonthTable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","expense","income","return","_arr","keys","_i","flag","arr","split","start","parseDate","end","aggregate","generateSelectMonths","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","left","right","YAxis","Tooltip","Legend","Line","stroke","activeDot","COLORS","CategoryPieChart","showFilter","selectedMonth","forEach","obj","index","fill","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","label","Stats","stats_SimpleLineChart","stats_CategoryPieChart","library","add","faAngleLeft","faAngleRight","faCheck","faWindowClose","faPlus","faMinus","faMoneyBillAlt","faCreditCard","faTrashAlt","faShekelSign","faDollarSign","faEuroSign","faEdit","App","showNavBar","tabs","tab","Link","selected","to","BrowserRouter","Switch","Route","path","exact","render","records_Records","components_home_Home","stats_Stats","Boolean","window","location","hostname","match","store","addNewUserToState","newUser","users","observable","addChildBox","_this3","selectedOption","parent","children","newUserData","_this4","currentUserIdForAddChild","closeAddBox","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af5ad01d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/money-loader.509e82cc.gif\";","module.exports = __webpack_public_path__ + \"static/media/coins.443e3830.png\";","import axios from 'axios'\n\nclass AxiosFuncClass {\n  getRequests(link) {\n    return axios.get(`/${link}`) \n      .catch(function (error) {\n        console.log(\"Sorry, something wrong. Get request failed\", error);\n      });\n\n  }\n\n  deleteRequests(link, id) {\n    //link = \"record\";\n    //id = 15;\n    console.log(link, id);\n    return axios.delete(`/delete/${link}/${id}`)\n      .then(result => {\n        console.log(\"success\", result);\n      })\n      .catch(function (error) {\n        console.log(\"Sorry, something wrong. delete request failed\", error);\n      });\n  }\n\n  putRequests(link, data) {\n    return axios.put(`/${link}`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }).then(response => {\n      console.log(\"DB Updated\", response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  postRequests(link, data) {\n    // let data = {name:\"business\", type:0, Icon:\"faGlobe\"};\n    return axios.post(`/${link}`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }).catch(function (error) {\n      console.log(\"Sorry, something wrong. New data hasn't been added.\", error);\n    });\n  }\n\n  //------ Functions to use externally\n\n  getDataFromDB() {\n    let userId = 1;//this.props.id;\n    return axios.get(`/getData/${userId}`)\n  }\n\n  getCategoriesFromDB() {\n    //return this.getRequests(\"categories\");\n    return axios.get(`/categories`)\n  }\n\n  addCategory = () => {\n    this.postRequests(\"category\", { name: \"business\", type: 0, Icon: \"faGlobe\" });\n  }\n  addRecord = (newRecord) => {\n     /* newRecord: { userId: 1, date: \"2018-08-30\",type: 1,categoryId: 1,paymentMethod: 0,amount: 100,currency: 'USD',comment: \"nice\"}*/\n    let userid = 1;\n    newRecord.userid = userid;\n    return this.postRequests(\"record\", newRecord);\n  }\n\n  deleteRecord = (id) => {\n    //let id = 10;\n    return this.deleteRequests(\"record\", id);\n  }\n  deleteCategory = () => {\n    let id = 8;\n    this.deleteRequests(\"category\", id);\n  }\n  editCategories = () => {\n    this.putRequests(\"category\", { id: 13, name: \"sport\", type: 0, Icon: \"faSport\" });\n  }\n  editRecord = (newRecord) => {\n    let userId = 1;\n    newRecord.userId = userId;\n    return this.putRequests(\"record\",newRecord);\n  }\n\n}\n\nconst AxiosFuncs = new AxiosFuncClass();\n\nexport default AxiosFuncs;\n\n\n","import React, { Component } from 'react';\nimport './form.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AxiosFuncs from '../utils/AxiosFuncs';\nimport moment from 'moment';\n\nclass AddForm extends Component {\n  constructor() {\n    super()\n    this.currencies = [\"NIS\", \"USD\", \"EUR\"]\n    this.state = {\n      date: \"\",\n      type: \"Expense\",\n      category: \"\",\n      paymentMethod: \"Cash\",\n      amount: 0,\n      currency: \"NIS\",\n      comment: \"\",\n      categoriesExpense: [],\n      categoriesIncome: [],\n      isRed: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.getCategories();\n  }\n\n  getCategories() {\n    AxiosFuncs.getCategoriesFromDB()\n      .then(result => {\n        let categoriesExpense = result.data.filter(d => d.type === 0)\n        let categoriesIncome = result.data.filter(d => d.type === 1)\n        let date = new Date();\n        date = moment(date).format(\"YYYY-MM-DD\")\n        let category = categoriesExpense[0].name\n        this.setState({ categoriesExpense, categoriesIncome, date, category })\n      })\n      .catch(err => {console.log(err); alert(\"Problem with DB\")})\n  }\n\n  addRecord = () => {\n    if (this.state.amount <= 0) {\n      this.setState({isRed: \"red\"})\n      return;\n    }\n    let category = (this.state.type === \"Expense\") ?\n      this.state.categoriesExpense.filter(d => d.name === this.state.category) :\n      this.state.categoriesIncome.filter(d => d.name === this.state.category)\n    let categoryid = category[0].id\n    let paymentmethodid = this.state.paymentMethod === \"Cash\" ? 0 : 1;\n    let type = this.state.type === \"Expense\" ? 0 : 1;\n    let { date, amount, currency, comment } = this.state;\n    let newRecord = { date, type, categoryid, paymentmethodid, amount, currency, comment }\n    AxiosFuncs.addRecord(newRecord).then(result => {\n      this.props.closeAddForm();\n      this.props.getRecords();\n    }\n    ).catch(err => console.log(err));\n  }\n\n  inputChange = (e) => {\n    if (e.target.name === \"type\") {\n      let category = \"\";\n      category = (e.target.value === \"Income\") ? this.state.categoriesIncome[0].name :\n                                                 this.state.categoriesExpense[0].name\n      this.setState({ [e.target.name]: e.target.value, category}); \n      return;                                  \n    }\n    this.setState({ [e.target.name]: e.target.value, isRed: \"\"});\n  }\n\n  render() {\n    return (\n      <div className=\"form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeAddForm} icon=\"window-close\" /></div>\n        <div>ADD NEW</div>\n        <div className=\"form-input\">\n\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"type\">\n            <div> Expense <input type=\"radio\" checked={this.state.type === \"Expense\"} onChange={this.inputChange} value=\"Expense\" name=\"type\" /> </div><span> </span>\n            <div> Income <input type=\"radio\" checked={this.state.type === \"Income\"} onChange={this.inputChange} value=\"Income\" name=\"type\" /> </div>\n          </div>\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"paymentMethod\">\n            <div> Cash <input type=\"radio\" checked={this.state.paymentMethod === \"Cash\"} onChange={this.inputChange} value=\"Cash\" name=\"paymentMethod\" /> </div><span> </span>\n            <div> Card <input type=\"radio\" checked={this.state.paymentMethod === \"Card\"} onChange={this.inputChange} value=\"Card\" name=\"paymentMethod\" /> </div>\n          </div>\n\n          <div> Date:</div><div> <input name=\"date\" type=\"date\" value={this.state.date} onChange={this.inputChange} /></div>\n\n          <div> Category: </div>\n          <div className=\"sel\"> <select name=\"category\" value={this.state.category} onChange={this.inputChange} >\n            {this.state.type === \"Expense\" ? this.state.categoriesExpense.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>\n            ) : this.state.categoriesIncome.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>)\n            }\n          </select></div>\n\n          <div> Amount</div><div className={this.state.isRed}> <input type=\"number\" name=\"amount\" value={this.state.amount} onChange={this.inputChange} /> </div>\n\n          <div> Currency: </div>\n          <div className=\"sel\"> <select name=\"currency\" value={this.state.currency} onChange={this.inputChange} >\n            {this.currencies.map((c, i) =>\n              <option key={i} value={c}>{c}</option>\n            )};\n          </select></div>\n\n          <div> Comment</div><div> <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.inputChange} /> </div>\n        </div>\n        <div>\n          <button onClick={this.addRecord}>Send</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddForm;\n\n","import React, { Component } from 'react';\nimport './form.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AxiosFuncs from '../utils/AxiosFuncs';\n\nclass EditForm extends Component {\n  constructor() {\n    super()\n    this.categoriesExpense = [];\n    this.categoriesIncome = [];\n    this.currencies = [\"NIS\", \"USD\", \"EUR\"];\n    this.state = {\n      date: \"\",\n      type: \"\",\n      category: \"\",\n      paymentMethod: \"\",\n      amount: \"\",\n      currency: \"\",\n      comment: \"\",\n      categoriesExpense: [],\n      categoriesIncome: []\n    }\n  }\n\n  componentDidMount() {\n    this.getCategories();\n    let id = this.props.recordIdToEdit;\n    let record = this.props.records.filter(r => r.id === id)[0];\n    let {date, type, category, paymentMethodId, amount, currency, comment} = record;\n    type = type === 0 ? \"Expense\" : \"Income\";\n    category = category.name;\n    let paymentMethod = paymentMethodId === 0 ? \"Cash\" : \"Card\";\n    this.setState({date, type, category, paymentMethod, amount, currency, comment} );\n  }\n\n  getCategories() {\n    AxiosFuncs.getCategoriesFromDB()\n      .then(result => {\n        let categoriesExpense = result.data.filter(d => d.type === 0)\n        let categoriesIncome = result.data.filter(d => d.type === 1)\n        this.setState({ categoriesExpense, categoriesIncome})\n      })\n      .catch(err => console.log(err))\n  }\n\n  editRecord = () => {\n    let category = (this.state.type === \"Expense\") ?\n      this.state.categoriesExpense.filter(d => d.name === this.state.category) :\n      this.state.categoriesIncome.filter(d => d.name === this.state.category)\n    let categoryid = category[0].id\n    let paymentmethodid = this.state.paymentMethod === \"Cash\" ? 0 : 1;\n    let type = this.state.type === \"Expense\" ? 0 : 1;\n    let { date, amount, currency, comment } = this.state;\n    let id = this.props.recordIdToEdit;\n    let newRecord = { id, date, type, categoryid, paymentmethodid, amount, currency, comment }\n    AxiosFuncs.editRecord(newRecord).then(result => {\n      this.props.closeEditForm();\n      this.props.getRecords();\n    }\n    ).catch(err => console.log(err));\n  }\n\n  inputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n\n  inputChangeType = (e) => {\n    let category = \"\";\n    /*category = (e.target.value === \"Income\") ? this.state.categoriesIncome[0].name :\n                                                 this.state.categoriesExpense[0].name\n    console.log(category)*/\n    this.setState({ [e.target.name]: e.target.value, category } ); \n  }\n\n  render() {\n    console.log(this.state)\n\n    return (\n      <div className=\"form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeEditForm} icon=\"window-close\" /></div>\n        <div>EDIT</div>\n        <div className=\"form-input\">\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"type\">\n            <div> Expense <input type=\"radio\" checked={this.state.type === \"Expense\"} onChange={this.inputChangeType} value=\"Expense\" name=\"type\" /> </div><span> </span>\n            <div> Income <input type=\"radio\" checked={this.state.type === \"Income\"} onChange={this.inputChangeType} value=\"Income\" name=\"type\" /> </div>\n          </div>\n\n          <div className=\"one-column1\" onChange={this.inputChange} name=\"paymentMethod\">\n            <div> Cash <input type=\"radio\" checked={this.state.paymentMethod === \"Cash\"} onChange={this.inputChange} value=\"Cash\" name=\"paymentMethod\" /> </div><span> </span>\n            <div> Card <input type=\"radio\" checked={this.state.paymentMethod === \"Card\"} onChange={this.inputChange} value=\"Card\" name=\"paymentMethod\" /> </div>\n          </div>\n\n          <div> Date:</div><div> <input name=\"date\" type=\"date\" value={this.state.date} onChange={this.inputChange} /></div>\n\n          <div> Category: </div>\n          <div className=\"sel\"> <select name=\"category\" value={this.state.category} onChange={this.inputChange} >\n            {this.state.type === \"Expense\" ? this.state.categoriesExpense.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>\n            ) : this.state.categoriesIncome.map((cat, i) =>\n              <option key={i} value={cat.name}>{cat.name}</option>)\n            }\n          </select></div>\n\n          <div> Amount</div><div> <input type=\"number\" name=\"amount\" value={this.state.amount} onChange={this.inputChange} /></div>\n\n          <div> Currency: </div>\n          <div className=\"sel\"> <select name=\"currency\" value={this.state.currency} onChange={this.inputChange} >\n            {this.currencies.map((c, i) =>\n              <option key={i} value={c}>{c}</option>\n            )};\n          </select></div>\n\n          <div> Comment</div><div> <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.inputChange} /> </div>\n        </div>\n        <div>\n          <button onClick={this.editRecord}>Send</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EditForm;\n\n","import React, { Component } from 'react';\nimport './delete-form.css';\nimport AxiosFuncs from '../utils/AxiosFuncs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass DeleteForm extends Component {\n  deleteRecord = () => {\n    AxiosFuncs.deleteRecord(this.props.recordIdToDelete).then( res => {\n      this.props.closeDeleteForm();\n      this.props.getRecords();\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"delete-form\">\n        <div className=\"close-button\"><FontAwesomeIcon onClick={this.props.closeDeleteForm} icon=\"window-close\" /></div>\n        <div>Are you sure you want to delete this record? </div>\n        <div className=\"div-button\">\n          <button onClick={this.deleteRecord}>YES</button>\n          <span> </span>\n          <button onClick={this.props.closeDeleteForm}>NO</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteForm;\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport AxiosFuncs from '../utils/AxiosFuncs';\nimport './records.css';\nimport loader from '../img/money-loader.gif';\n\n// Components\nimport AddForm from './AddForm';\nimport EditForm from './EditForm';\nimport DeleteForm from './DeleteForm';\n\n// Font awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Records extends Component {\n  constructor() {\n    super()\n    this.fields = [\"Date\", \"Type\", \"Category\", \"Method\", \"Amount\", \"Currency\", \"Comments\"]\n    this.currencyIcon = { \"NIS\": \"shekel-sign\", \"EUR\": \"euro-sign\", \"USD\": \"dollar-sign\" }\n    this.itemsPerPageOptions = [10, 20, 50, 100]\n    this.state = {\n      isLoading: true,\n      allRecords: \"\",\n      total: \"\",\n      itemsPerPage: 10,\n      textTosearch: \"\",\n      startDate: \"2018-01-01\",\n      endDate: \"\",\n      currentPage: 1,\n      showAddForm: false,\n      recordIdToEdit: -1, // if -1 nothing to edit,\n      recordIdToDelete: -1 // if -1 nothing to delete,\n    }\n  }\n\n  componentDidMount() {\n    this.props.changeSelected(\"Records\")\n    this.getRecords();\n    let date = new Date();\n    date = moment(date).format(\"YYYY-MM-DD\");\n    this.setState({ endDate: date })\n  }\n\n  getRecords = () => {\n    AxiosFuncs.getDataFromDB().then(result => {\n      let allRecords = result.data[0].record\n      let total = allRecords.length\n      allRecords.sort((a, b) => (new Date(b.date) - new Date(a.date)));\n      this.setState({ allRecords, isLoading: false, total });\n    }).catch(function (error) {\n      console.log(error);\n    })\n  }\n\n  changeInput = (event) => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  changePage = (action) => {\n    let currentPage = this.state.currentPage\n    action === \"plus\" ? currentPage++ : currentPage--\n    this.setState({ currentPage })\n    this.getCurrentRecords();\n  }\n\n  showLoader = () => this.state.isLoading ? <div className=\"loading\"> <img alt=\"loader\" src={loader} /></div> : null\n\n  // Top bar menu\n  showSearchBar = () => <div className=\"search-bar\">\n    From: <input type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.changeInput}></input><span> </span>\n    To: <input type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.changeInput}></input><span> </span>\n    <input type=\"text\" placeholder=\"Search comment\" name=\"textTosearch\" value={this.state.textTosearch} onChange={this.changeInput}></input>\n  </div>\n\n  showTotal = () =>\n    <div className=\"total\">\n      Total: <span> </span>\n      {this.state.total}\n    </div>\n\n  showItemsPerPage = () =>\n    <div className=\"itemsPerPage\">\n      Show: <span> </span>\n      <select name=\"itemsPerPage\" value={this.state.itemsPerPage} onChange={this.changeInput}>\n        {this.itemsPerPageOptions.map(m => <option key={m} value={m}>{m}</option>)}\n      </select>\n    </div>\n\n  showPagination = (startIndex, endIndex, lastPage) =>\n    <div className=\"pagination\">\n      {this.state.currentPage !== 1 ? <FontAwesomeIcon onClick={(e) => this.changePage(\"minus\")} icon=\"angle-left\" size=\"1x\" /> : null}\n      <span> </span> {startIndex} - {endIndex} <span> </span>\n      {this.state.currentPage !== lastPage ? <FontAwesomeIcon onClick={() => this.changePage(\"plus\")} icon=\"angle-right\" size=\"1x\" /> : null}\n    </div>\n\n  // \n  showHeader = () => <div id=\"grid-header\">\n    {this.fields.map((f, i) => <div key={i}>{f}</div>)}\n  </div>\n\n  showAddForm = () => {\n    this.setState({ showAddForm: true })\n  }\n\n  // Close Forms Functions\n  closeAddForm = () => this.setState({ showAddForm: false })\n  closeEditForm = () => this.setState({ recordIdToEdit: -1 })\n  closeDeleteForm = () => this.setState({ recordIdToDelete: -1 })\n\n  // Filter records by date and comment\n  getCurrentRecords = () => {\n    let itemsPerPage = parseInt(this.state.itemsPerPage)\n    let records = [...this.state.allRecords]\n    let startIndex = (this.state.currentPage - 1) * itemsPerPage + 1\n    let endIndex = startIndex + itemsPerPage - 1\n    records = records.filter(c =>\n      (c[\"comment\"].toLowerCase().includes(this.state.textTosearch.toLowerCase()))\n      && (c.date >= this.state.startDate || this.state.startDate === \"\")\n      && (c.date <= this.state.endDate || this.state.endDate === \"\")\n    )\n    let lastPage = Math.ceil(records.length / itemsPerPage)\n    records = records.slice(startIndex - 1, endIndex)\n    return { records, startIndex, endIndex, lastPage }\n  }\n\n  renderRecords = (records) =>\n    <div id=\"grid-container\">\n      {this.showHeader()}\n      {records.map(c => {\n        let date = moment(c.date).format(\"MM/DD/YY\")\n        return (\n          <div className=\"item\" key={c.id}>\n            <div>{date}</div>\n            <div>{c.type ? <FontAwesomeIcon icon=\"plus\" /> : <FontAwesomeIcon icon=\"minus\" />}</div>\n            <div>{c.category.name}</div>\n            <div>{c.paymentMethod.name === \"cash\" ? <FontAwesomeIcon icon=\"money-bill-alt\" /> : <FontAwesomeIcon icon=\"credit-card\" />} </div>\n            <div>{c.amount}</div>\n            <div><FontAwesomeIcon icon={this.currencyIcon[c.currency]} /></div>\n            <div>{c.comment}</div>\n            <div>\n              <FontAwesomeIcon icon=\"trash-alt\" onClick={() => this.deleteRecord(c.id)} />\n              <span> </span>\n              <FontAwesomeIcon icon=\"edit\" onClick={() => this.editRecord(c.id)} />\n            </div>\n          </div>)\n      })}\n    </div>\n\n  editRecord = (id) => {\n    this.setState({ recordIdToEdit: id })\n  }\n\n  deleteRecord = (id) => {\n    this.setState({ recordIdToDelete: id })\n  }\n\n  render() {\n    let { records, startIndex, endIndex, lastPage } = this.getCurrentRecords()\n\n    return (\n      <div className=\"container\">\n        <div className=\"row-bar\">\n          {this.showSearchBar()}\n          {this.showTotal()}\n          {this.showItemsPerPage()}\n          {this.showPagination(startIndex, endIndex, lastPage)}\n        </div>\n        {this.renderRecords(records)}\n        {this.state.showAddForm ? <AddForm closeAddForm={this.closeAddForm} getRecords={this.getRecords} addRecord={this.addRecord} /> : null}\n        {(this.state.recordIdToEdit !== -1) ? <EditForm closeEditForm={this.closeEditForm} recordIdToEdit={this.state.recordIdToEdit} records={records} getRecords={this.getRecords} /> : null}\n        {(this.state.recordIdToDelete !== -1) ? <DeleteForm closeDeleteForm={this.closeDeleteForm} recordIdToDelete={this.state.recordIdToDelete} getRecords={this.getRecords} /> : null}\n        {this.showLoader()}\n        <div className=\"dot\"> <FontAwesomeIcon size='6x' onClick={() => this.showAddForm()} icon=\"plus\" /></div>\n      </div>\n    )\n  }\n}\n\nexport default Records;\n","import React, { Component } from 'react'\nimport './Home.css';\nimport coins from '../img/coins.png';\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.changeSelected(\"Home\");\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"text\">\n          Welcome to the money tracking app. This app will help you to track your spendings and earning.\n          In the tab \"Records\", you can add, delete and edit new records.\n          In the tab \"Stats\", you can see charts reflecting your spending habits and see how you can improve.\n          Stack:\n          <ul>\n            <li>React</li>\n            <li>Node.js</li>\n            <li>Express</li>\n            <li>JavaScript, ES6</li>\n            <li>PostgreSQL + Sequelize</li>\n            <li>Recharts</li>\n            <li>HTML5</li>\n            <li>CSS3</li>\n          </ul>\n          <img alt=\"coins\" src={coins} height=\"200\" width=\"200\"/>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default Home;\n\n","import React, { Component } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport moment from 'moment';\n\nclass SimpleLineChart extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allRecords: [],\n      months: [],\n      startDate: \"\",\n      endDate: \"\"\n    }\n  }\n\n  componentDidMount() {\n    let today = new Date();\n    let currentYear = moment(today).format(\"YY\")\n    let startDate = '01/' + currentYear\n    let endDate = moment(today).format(\"MM/YY\");\n    this.setState({ startDate, endDate })\n  }\n\n  // generate months in format \"04/18\" for select field from the earliest month there is a record for\n  generateSelectMonths() {\n    let allRecords = this.props.allRecords\n    let months = []\n    let key = \"\"\n\n    if (allRecords.length !== 0) {\n      let startDate = allRecords.sort((a, b) => (new Date(a.date) - new Date(b.date)))[0].date\n      let { startMonth, startYear, currentMonth, currentYear } = this.getDatesSelect(startDate)\n\n      for (let year = startYear; year <= currentYear; year++) {\n        for (let month = startMonth; month <= currentMonth; month++) {\n          month = (month < 10) ? ('0' + month) : month\n          key = `${month}/${year}` \n          // let m = moment(month).format(\"MMM\")\n          // key = `${month} ${year}`\n          months.push(key)\n        }\n      }\n    }\n    return months;\n  }\n\n  getDatesSelect(startDate) {\n    let today = new Date();\n    let currentYear = parseInt(moment(today).format(\"YY\"))\n    let currentMonth = parseInt(moment(today).format(\"MM\"))\n    let startYear = parseInt(moment(startDate).format(\"YY\"))\n    let startMonth = parseInt(moment(startDate).format(\"MM\"))\n    return { startMonth, startYear, currentMonth, currentYear }\n  }\n\n  // Aggregate income and expenses by months and fills the table\n  aggregate() {\n    let allRecords = this.props.allRecords;\n    let startDate = this.getDateFromMonth(this.state.startDate, \"\")\n    let endDate = this.getDateFromMonth(this.state.endDate, \"end\")\n    let table = this.generateMonthTable()\n    let month = \"\"\n    let data = []\n\n    if (allRecords.length !== 0) {\n      for (let element of allRecords) {\n        month = moment(element.date).format(\"MM/YY\");\n        if (element.date >= startDate && element.date < endDate) {\n          if (element.type === 0) {\n            table[month].expense = table[month].expense + element.amount\n          }\n          else {\n            table[month].income = table[month].income + element.amount\n          }\n        }\n      }\n    }\n    if (table.length !== 0) {\n      for (let element of Object.keys(table)) {\n        data.push({ month: element, expense: table[element].expense, income: table[element].income })\n      }\n    }\n    return data\n  }\n\n  // get month in format 04/18 and return 2018-04-01\n  getDateFromMonth(month, flag) {\n    if (month !== undefined) {\n      if (month.includes('/')) {\n        let arr = month.split(\"/\")\n        return flag === 'end' ? `20${arr[1]}-${arr[0] + 1}-01` : `20${arr[1]}-${arr[0]}-01`\n      }\n    }\n    return month\n  }\n\n  // generate table for aggregation and fill it with 0 \n  generateMonthTable() {\n    let allRecords = this.props.allRecords\n    let table = {}\n    let key = \"\"\n    if (allRecords.length !== 0) {\n      let start = this.parseDate(this.state.startDate)\n      let end = this.parseDate(this.state.endDate)\n\n      for (let year = start.year; year <= end.year; year++) {\n        for (let month = start.month; month <= end.month; month++) {\n          month = (month < 10) ? ('0' + month) : month\n          key = `${month}/${year}`\n          table[key] = { income: 0, expense: 0 }\n        }\n      }\n    }\n    return table;\n  }\n\n  // gets date in format '05/18' and return month and year separately\n  parseDate(date) {\n    let month = parseInt(date.split('/')[0])\n    let year = parseInt(date.split('/')[1])\n    return { month, year }\n  }\n\n  inputChange = (event) => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  showDateFilter = (months) =>\n    <div className=\"select-month\">\n      <select name=\"startDate\" value={this.state.startDate} onChange={this.inputChange} >\n        {months.map(m => <option key={m} value={m}>{m}</option>)}\n      </select>\n      <span> </span>\n      <select name=\"endDate\" value={this.state.endDate} onChange={this.inputChange} >\n        {months.map(m => <option key={m} value={m}>{m}</option>)}\n      </select>\n    </div>\n\n  render() {\n    let data = this.aggregate();\n    let months = this.generateSelectMonths();\n\n    return (\n      <div className=\"chart-box\">\n        <div className=\"chart-name\">Income and expenses for period</div>\n        {this.showDateFilter(months)}\n        <LineChart width={600} height={400} data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" padding={{ left: 30, right: 30 }} />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"income\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          <Line type=\"monotone\" dataKey=\"expense\" stroke=\"#82ca9d\" />\n        </LineChart>\n      </div>\n    );\n  }\n}\n\nexport default SimpleLineChart\n","import React, { Component } from 'react';\nimport { PieChart, Pie, Tooltip} from 'recharts';\nimport moment from 'moment';\n\n/* example of data \nconst data01 = [{ name: 'Group A', value: 400 },\n{ name: 'Group B', value: 300, fill: \"red\" },\n{ name: 'Group C', value: 300 , fill: \"blue\"}, { name: 'Group D', value: 200 },\n{ name: 'Group E', value: 278 }, { name: 'Group F', value: 189 }] */\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', \n'#3e4af9' , '#f95d3e', '#d3f93e', '#b560f2', '#f24b7a', '#9bf998'];\n\nclass CategoryPieChart extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allRecords: [],\n      months: [],\n      selectedMonth: \"10/18\",\n      type: \"expense\"\n    }\n  }\n  \n  // generate months in format \"04/18\" for select field from the earliest month there is a record for\n  generateSelectMonths() {\n    let allRecords = this.props.allRecords\n    let months = []\n    let key = \"\"\n\n    if (allRecords.length !== 0) {\n      let startDate = allRecords.sort((a, b) => (new Date(a.date) - new Date(b.date)))[0].date\n      let { startMonth, startYear, currentMonth, currentYear } = this.getDatesSelect(startDate)\n\n      for (let year = startYear; year <= currentYear; year++) {\n        for (let month = startMonth; month <= currentMonth; month++) {\n          month = (month < 10) ? ('0' + month) : month\n          key = `${month}/${year}`\n          months.push(key)\n        }\n      }\n    }\n    return months;\n  }\n\n  getDatesSelect(startDate) {\n    let today = new Date();\n    let currentYear = parseInt(moment(today).format(\"YY\"))\n    let currentMonth = parseInt(moment(today).format(\"MM\"))\n    let startYear = parseInt(moment(startDate).format(\"YY\"))\n    let startMonth = parseInt(moment(startDate).format(\"MM\"))\n    return { startMonth, startYear, currentMonth, currentYear }\n  }\n\n  // Aggregate expenses by category\n  aggregate() {\n    let allRecords = this.props.allRecords;\n    let startDate = this.getDateFromMonth(this.state.selectedMonth, \"\")\n    let endDate = this.getDateFromMonth(this.state.selectedMonth, \"end\")\n    let table = {}\n    let data = []\n    let type = this.state.type === \"expense\" ? 0 : 1;\n\n    if (allRecords.length !== 0) {\n      allRecords.map(element => {\n        if (element.date >= startDate && element.date < endDate && element.type === type) {\n          table[element.category.name] = table[element.category.name] + element.amount ||\n                                         element.amount \n        }\n      })\n      Object.keys(table).map(element => data.push({ name: element, value: table[element]}));\n      data.sort((a, b) => (b.value - a.value));\n      data.forEach((obj, index) => obj.fill = COLORS[index % COLORS.length]);\n    }\n    return data;\n  }\n\n  // get month in format 04/18 and return 2018-04-01\n  getDateFromMonth(month, flag) {\n    if (month !== undefined) {\n      if (month.includes('/')) {\n        let arr = month.split(\"/\")\n        return flag === 'end' ? `20${arr[1]}-${arr[0] + 1}-01` : `20${arr[1]}-${arr[0]}-01`\n      }\n    }\n    return month\n  }\n\n  inputChange = (event) => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  showFilter = (months) =>\n    <div className=\"select-month\">\n      <select name=\"selectedMonth\" value={this.state.selectedMonth} onChange={this.inputChange} >\n        {months.map(m => <option key={m} value={m}>{m}</option>)}\n      </select><span> </span>\n      <select name=\"type\" value={this.type} onChange={this.inputChange} >\n        <option value=\"expense\">expense</option>\n        <option value=\"income\">income</option>\n      </select>\n    </div>\n\n  render() {\n    let data = this.aggregate();\n    let months = this.generateSelectMonths();\n\n    return (\n      <div className=\"chart-box\">\n        <div className=\"chart-name\">Income and expenses per month</div>\n        {this.showFilter(months)}\n        <PieChart width={400} height={400}>\n          <Pie isAnimationActive={false} dataKey=\"value\" data={data} cx={200} cy={200} outerRadius={150} fill=\"#8884d8\" label />\n          <Tooltip />\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default CategoryPieChart;\n","import React, { Component } from 'react';\nimport AxiosFuncs from '../utils/AxiosFuncs';\nimport './stats.css';\n\n// Components\nimport SimpleLineChart from './SimpleLineChart';\nimport CategoryPieChart from './CategoryPieChart';\n\nclass Stats extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoading: true,\n      allRecords: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.props.changeSelected(\"Stats\")\n    this.getRecords();\n  }\n\n  getRecords = () => {\n    AxiosFuncs.getDataFromDB().then(result => {\n      let allRecords = result.data[0].record\n      allRecords.sort((a, b) => (new Date(b.date) - new Date(a.date)));\n      this.setState({ allRecords, isLoading: false });\n    }).catch(function (error) {\n      console.log(error);\n    })\n  }\n\n  changeInput = (event) => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  render() {\n    //console.log(this.state.allRecords)\n    return (\n    <div>\n      <SimpleLineChart allRecords={this.state.allRecords}/>\n      <CategoryPieChart allRecords={this.state.allRecords}/>\n    </div>)\n  }\n}\n\nexport default Stats;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\n// Components\nimport Records from './components/records/Records'\nimport Home from './components/home/Home'\nimport Stats from './components/stats/Stats'\n\n// Font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faAngleLeft, faAngleRight, faCheck, faWindowClose, faPlus, faMinus, faMoneyBillAlt, faCreditCard, faTrashAlt, faShekelSign, faDollarSign, faEuroSign, faEdit } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faAngleLeft, faAngleRight, faCheck, faWindowClose, faPlus, faMinus, faMoneyBillAlt, faCreditCard, faTrashAlt, faShekelSign, faDollarSign, faEuroSign, faEdit);\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.tabs = [\"Home\", \"Records\", \"Stats\"]\n    this.state = {\n      selected: \"\"\n    }\n  }\n\n  showNavBar = () => <div id=\"nav-bar\">\n    <ul id=\"nav-bar\">\n      {this.tabs.map((tab, i) =>\n        <li key={i}>\n          <Link className={this.state.selected === tab ? \"selected\" : \"\"} to={\"/\" + tab}>\n            <span>{tab}</span>\n          </Link>\n        </li>)\n      }\n    </ul>\n  </div>\n\n  changeSelected = (tab) => this.setState({ selected: tab })\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {this.showNavBar()}\n          <Switch>\n            <Route path=\"/records\" exact render={() => <Records changeSelected={this.changeSelected} />} />\n            <Route path=\"/home\" exact render={() => <Home changeSelected={this.changeSelected} />} />} />\n            <Route path=\"/stats\" exact render={() => <Stats changeSelected={this.changeSelected} />} />} />\n            <Route path=\"/\" render={() => <Home changeSelected={this.changeSelected} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from \"mobx\";\nimport axios from 'axios';\nclass DataStore {\n\t@observable users = [];\n\t@observable children=[];\n\t@observable parent= \"\";\n\t@observable  selectedOption= 1;\n\t@observable addChildBox=false;\n\t@observable  currentUserIdForAddChild= {};\n\n\n\t@action closeAddBox = () => {\n\t\tconsole.log(\"close\");\n\t\tthis.addChildBox = false;\n\t}\n\t// @computed get iceCreamsFilteredCount() {\n\t// \treturn this.filterIceCreams.length;\n\t// }\n\t// @action closeUpdateModal = () => {\n\t// \tthis.showComponent = false;\n\t// }\n\n\n\t@action getChildren = () => {\n\t\tlet userId = this.selectedOption;\n\t\tconsole.log(\"userId\", userId);\n\t\taxios.get(`http://localhost:5001/getChildren/${userId}`)\n\t\t\t.then(result => {\n\t\t\t\tconsole.log(result.data);\n\t\t\t\tthis.parent=result.data;\n\t\t\t\tthis.children=result.data[\"Children\"];\n\t\t\t\tconsole.log(\"this children\",result.data[\"Children\"]);\n\t\t})\n\t}\n\n\taddNewUserToState=(newUser)=>{\n\t\tthis.users.push(newUser);\n\t\tconsole.log(this.users);\n\n\t}\n\t@action addChildToDb = (newUserData) => {\n\t\tnewUserData[\"parentId\"]=this.currentUserIdForAddChild;\n\t\tconsole.log(\"clickedChild\", newUserData);\n\t\taxios.post('http://localhost:5001/addChild', newUserData, {\n          headers: {\n              'Content-Type': 'application/json',\n          }\n      }\n      )\n      .then(response => {\n        console.log(\"response from DB\",response);\n        this.addNewUserToState(response.data)\n      })\n      .catch(function (error) {\n        alert(\"Sorry, something wrong. New client haven't added.\");\n        console.log(error);\n\t  });\n\t  this.closeAddBox();\n    console.log(\"Added to DB\")\n  }\n\n//   updateClientDetailsDB = (data) =>{\n//     console.log('DATA FOR DB', data);\n//     axios.post('http://localhost:5000/updateClientInfo', data, {\n//           headers: {\n//               'Content-Type': 'application/json',\n//           }\n//       }\n//       )\n//       .then(response => {\n//         console.log(\"response from DB\",response);\n//         // this.addNewClientToState(response.data)\n//       })\n//       .catch(function (error) {\n//         alert(\"Sorry, something wrong. New client haven't added.\");\n//         console.log(error);\n//       });\n//       console.log(\"Updated in DB\")\n//   }\n\n//     }\n\n}\n\nconst store = new DataStore();\nwindow.store = store;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './components/store/dataStore';\nimport { Provider } from 'mobx-react';\n\nwindow.store = store;\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(<Provider store={store}>\n                <App />\n            </Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}